// Components
// ------------------------------------

@import '../util.styl'
@import '../common.styl'

// Box
vogue-box(_color, _margin, _radius, _padding) {
  background-color: _color;
  margin: _margin;
  border: none;
  border-radius: _radius;
  padding: _padding;
  outline-color: _color;
  outline-width: 0px;
  outline-style: solid;
}

// Text
vogue-text(_textColor=black, _fontSize=16px, _textAlign=center) {
  color: _textColor;
  text-align: _textAlign;
  font-size: _fontSize;
}

// Value (lighten,darken)
vogue-color-value(_color, _colorUp=false, _amount=25%) {
  if _colorUp {
    background-color: lighten(_color, _amount);
  } else {
    background-color: darken(_color, _amount);
  }
}

// Outline (shadow)
vogue-box-outline(_color, _width=4px, _softness=0px, _alpha=0.5) {
  box-shadow: 0 0 _softness _width alpha(_color, _alpha);
}

// Button
VOGUE_BUTTON_DEFAULT_ARGUMENTS = {
  _backgroundColor: alpha(black, 0.1),
  _backgroundColorHover: alpha(black, 0.3),
  _focusOutlineColor: white,
  _radius: 4px,
  _padding: 2px 16px,
  _margin: 4px,
}
vogue-button(args=null) {
  args = vogue-merge-default(args, VOGUE_BUTTON_DEFAULT_ARGUMENTS);
  display: inline-block;
  border: none;
  border-radius: args._radius;
  background-color: args._backgroundColor;
  padding: args._padding;
  margin: args._margin;
  &:hover {
    background-color: args._backgroundColorHover;
  }
  &:focus {
    vogue-box-outline(args._focusOutlineColor, 3px);
  }
}

// Simple-Button
VOGUE_SIMPLE_BUTTON_DEFAULT_ARGUMENTS = {
  _backgroundColor: transparent,
  _backgroundColorHover: alpha(black, 0.25),
}
vogue-simple-button(args=null) {
  args = vogue-merge-default(args, VOGUE_SIMPLE_BUTTON_DEFAULT_ARGUMENTS);
  background-color: args._backgroundColor;
  &:hover {
    background-color: args._backgroundColorHover;
  }
}

// Border-Button
VOGUE_BORDER_BUTTON_DEFAULT_ARGUMENTS = {
  _borderRadius: 2px,
  _borderWidth: 1px,
  _borderStyle: solid,
  _borderColor: transparent,
  _borderColorHover: alpha(white, 0.75),
  _backgroundColor: transparent,
  _backgroundColorHover: alpha(black, 0.25),
}
vogue-border-button(args=null) {
  args = vogue-merge-default(args, VOGUE_BORDER_BUTTON_DEFAULT_ARGUMENTS);
  border: args._borderWidth args._borderStyle args._borderColor;
  border-radius: args._borderRadius;
  &:hover {
    border-color: args._borderColorHover;
    background-color: args._backgroundColorHover;
  }
}

// Link
vogue-link() {
  vogue-button(vogue_transparent, vogue_link);
  &:hover {
    color: darken(vogue_link, 25%);
    text-decoration: underline;
  }
}

// Badge
vogue-badge(_color, _textColor) {
  vogue-transition();
  vogue-box(_color, 2px, 4px, 0px 6px);
  vogue-text(_textColor, 12px);

  display: inline-block;
  font-weight: bold;
}

// Alert
vogue-alert(_color) {
  vogue-alert-adv(_color, true);
}

vogue-alert-adv(_color, _light=false) {
  _light_colorize = _light ? lighten : darken;
  _dark_colorize = _light ? darken : lighten;
  _text_colorize = _light ? 50% : 10%;

  vogue-transition();
  vogue-box(_light_colorize(_color, 80%), 8px, 4px, 14px 25px);
  vogue-text(_dark_colorize(_color, _text_colorize), 16px, left);

  display: block;
  border-style: solid;
  border-width: 1px;
  border-color: alpha(_dark_colorize(_color, 50%), 0.3);
}

// List Group
vogue-list-group() {
  border-color: alpha(black, 0.0);
}

vogue-list-border() {
  1px solid alpha(black, 0.2);
}

// List
vogue-list() {
  vogue-list-group();
  border: vogue-list-border();
  list-style-type: none;
  margin: 8px;
  padding: 0;
  border-radius: 4px;
}

// List item
vogue-list-item() {
  vogue-list-group();
  border-bottom: vogue-list-border();
  text-align: left;
  padding: 14px;

  &:last-child {
    border-bottom: none;
  }
}

vogue-hr(_color, _alpha) {
  border-top: 1px inset alpha(_color, _alpha);
  border-bottom: none;
  border-left: none;
  border-right: none;
}

vogue-shadow() {
  box-shadow: 0px 2px 4px 1px rgba(0, 0, 0, 0.3);
}

vogue-card() {
  vogue-shadow();
  border-radius: 4px;
  margin: 10px;
}

vogue-fab(_color=#2233aa) {
  display: inline-flex;
  width: 55px;
  height: 55px;
  border-radius: 50%;
  align-items: center;
  justify-content: center;
  color: #fff;
  background: linear-gradient(45deg, darken(_color, 30%), _color);
  box-shadow: 0px 7px 30px rgba(43,98,169,0.5);
  position: relative;
  font-size: 30px;
  flex-shrink: 0;
  transition: all .3s;

  &:hover {
    box-shadow: 0px 7px 30px rgba(43,98,169,0.9);
    transform: scale(1.1);
  }
}