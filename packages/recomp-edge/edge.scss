@use '@recomp/core' as recomp;
@use 'sass:color';

$border-radius: 6px;
$border-left: 3px;

// shared by item and group icon (caret)
@mixin icon() {
  display: flex;
  justify-content: center;
  align-items: center;

  width: 1.5em;
  margin-left: 0.2em;
  margin-right: 0.6em;

  svg {
    $size: 1.5em;
    width: $size;
    height: $size;
  }
}

// shared by item and group root
@mixin root-element() {
  margin: 6px 4px 6px 0px;
}

// shared by item and group head
@mixin element() {
  border: 1px solid transparent;
  border-left-width: $border-left;
  min-width: 24px;
  height: 1.5em;
}

@mixin init() {

  .recomp-edge {

    $background: recomp.$background;
    $hover: color.adjust(recomp.$background, $lightness: 8%);
    $selected: color.adjust(recomp.$background, $lightness: 8%);

    background-color: $background;
    display: inline-flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: stretch;

    padding: 4px 0px 12px 8px;
    box-sizing: border-box;

    // Need to apply to both parent and scroll container
    // (to work with both browsers)
    @include recomp.scrollbar($width: 4px);

    .scrollable {

      overflow-y: scroll;
      overflow-x: hidden;
      @include recomp.scrollbar($width: 4px);
    }

    // Draggable tab element (item & group)
    .tab {
      position: relative;
      box-shadow: rgba(0, 0, 0, 0.3) 0 0px 0px;

      display: flex;
      justify-content: flex-start;
      align-items: center;

      &.dragging {
        z-index: 1;
        box-shadow: rgba(0, 0, 0, 0.5) 0 4px 8px;
      }
    }

    // Tab item (standalone / within group)
    .item {
      color: rgba(255, 255, 255, 0.7);

      display: flex;
      flex-direction: row;
      justify-content: flex-start;

      @include element();
      @include root-element();
      padding: 0.4em 0;

      border-radius: $border-radius;

      user-select: none;

      transition: border-color 0.3s, box-shadow 0.6s, border-color 0.3s, background-color 0.3s;

      >.icon {
        @include icon();
      }

      .label {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        flex-grow: 1;
        margin-right: 10px;
      }

      .close-container {
        position: relative;
      }


      .close {
        position: absolute;
        transform: translateX(calc(-100% - 0.1em)) translateY(-50%);

        visibility: hidden;
        color: transparent;
        align-self: flex-end;

        padding: 4px;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        border-radius: 50%;
        transition: background-color 0.3s;

        &:hover {
          background-color: rgba(white, 0.2);
        }
      }

      &.dragging {
        background-color: $hover;
      }

      &.selected {
        border-color: lighten(recomp.$primary, 30%);
        background-color: $selected;
      }
    }

    &:not(.minimized) {
      .item {

        &:hover:not(.dragging):not(.minimized),
        &.selected:not(.dragging):not(.minimized) {
          .close {
            visibility: visible;
            pointer-events: visible;
            color: rgb(white, 0.7);

            svg {
              $size: 1em;
              width: $size;
              height: $size;
            }
          }
        }
      }
    }


    &:not(.dragging) .tab.item:not(.selected) {
      &:hover {
        background-color: $hover;
      }
    }

    // Tab group
    .tab.group {

      display: flex;
      flex-direction: column;
      align-content: stretch;
      align-items: stretch;
      overflow: hidden;
      @include root-element();

      .head {
        color: rgba(0, 0, 0, 1);
        font-size: 1.0em;
        font-weight: 500;
        display: flex;
        flex-direction: row;
        align-items: center;
        text-align: center;

        @include element();
        padding: 0.2em 0;
        border-top-left-radius: $border-radius;
        border-top-right-radius: $border-radius;

        .label {
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }

        >.icon {
          @include icon();

          svg {
            transition: transform 0.2s;
            transform: rotate(0deg);
          }
        }
      }

      .body {
        background-color: $background;
        border-bottom-left-radius: $border-radius;
        border-bottom-right-radius: $border-radius;
      }

      user-select: none;
      transition: border-color 0.3s,
      box-shadow 0.6s,
      border-color 0.3s;

      &.dragging {
        box-shadow: rgba(0, 0, 0, 0.5) 0 4px 8px;
      }

      &.selected {
        border-color: lighten(recomp.$primary, 30%);
      }
    }

    .tab.group.expanded {
      >.head>.icon>svg {
        transform: rotate(90deg);
      }
    }

    .tab.group:not(.expanded) {
      border-bottom-left-radius: $border-radius;
      border-bottom-right-radius: $border-radius;
    }

    .tooltip-overlay {
      pointer-events: none;
      position: fixed;
      top: 0px;
      bottom: 0px;
      left: 0;
      right: 0;
      z-index: 100;

      .tooltip {
        position: absolute;
      }
    }

  }

}