@use '@recomp/core' as recomp;

@mixin init() {

  .recomp-edge {

    $background: recomp.$background;
    $hover: recomp.$bg_lighter;
    $selected: recomp.$bg_lighter;

    background-color: $background;
    display: inline-flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: stretch;

    padding: 4px 4px 12px 8px;

    // Need to apply to both parent and scroll container
    // (to work with both browsers)
    @include recomp.scrollbar($width: 4px);

    .scrollable {

      overflow-y: scroll;
      @include recomp.scrollbar($width: 4px);
    }

    // Draggable tab element (item & group)
    .tab {
      position: relative;
      box-shadow: rgba(0, 0, 0, 0.3) 0 0px 0px;

      display: flex;
      justify-content: flex-start;
      align-items: center;

      &.dragging {
        z-index: 1;
        box-shadow: rgba(0, 0, 0, 0.5) 0 4px 8px;
      }
    }

    // Tab item (standalone / within group)
    .item {
      color: rgba(255, 255, 255, 0.7);

      display: flex;
      flex-direction: row;
      justify-content: space-between;

      border: 1px solid transparent;
      border-left-width: 3px;
      margin: 6px 4px 6px 0px;
      padding: 4px 4px 4px 4px;
      min-width: 16px;
      height: 22px;
      border-radius: 6px;

      user-select: none;

      transition: border-color 0.3s, box-shadow 0.6s, border-color 0.3s, background-color 0.3s;

      .icon {
        display: flex;
        margin-right: 4px;

        svg {
          width: 20px;
          height: 20px;
        }
      }

      .label {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        flex-grow: 1;
        margin-right: 10px;
      }

      .close-container {
        position: relative;
      }

      .close {
        position: absolute;
        transform: translate(-22px, -12px);

        visibility: hidden;
        color: transparent;
        align-self: flex-end;

        padding: 4px;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        border-radius: 50%;
        transition: background-color 0.3s;

        &:hover {
          background-color: $hover;
        }
      }

      &:hover:not(.dragging),
      &.selected:not(.dragging) {
        .close {
          visibility: visible;
          pointer-events: visible;
          color: rgb(white, 0.7);
        }
      }

      &.dragging {
        background-color: $hover;
      }

      &.selected {
        border-color: lighten(recomp.$primary, 30%);
        background-color: $selected;
      }
    }

    &:not(.dragging) .tab.item:not(.selected) {
      &:hover {
        background-color: $hover;
      }
    }

    // Tab group
    .tab.group {

      display: flex;
      flex-direction: column;
      align-content: stretch;
      align-items: stretch;
      overflow: hidden;

      margin: 6px 4px 6px 0px;

      .head {
        color: rgba(0, 0, 0, 1);
        font-size: 16px;
        font-weight: 500;
        display: flex;
        flex-direction: row;
        align-items: center;
        text-align: center;
        min-width: 24px;
        height: 22px;

        border: 1px solid transparent;
        border-left-width: 2px;
        border-top-left-radius: 2px;
        border-top-right-radius: 2px;

        .label {
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }
      }

      .body {
        background-color: $background;
        border-bottom-left-radius: 2px;
        border-bottom-right-radius: 2px;
      }

      user-select: none;
      transition: border-color 0.3s,
      box-shadow 0.6s,
      border-color 0.3s;

      .icon {
        display: flex;
        margin-right: 4px;

        svg {
          transition: transform 0.2s;
          transform: rotate(0deg);
          width: 20px;
          height: 20px;
        }
      }

      &.dragging {
        box-shadow: rgba(0, 0, 0, 0.5) 0 4px 8px;
      }

      &.selected {
        border-color: lighten(recomp.$primary, 30%);
      }
    }

    .tab.group.expanded {
      >.head>.icon>svg {
        transform: rotate(90deg);
      }
    }

  }

}